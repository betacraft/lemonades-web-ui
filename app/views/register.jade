div.container-fluid-full
  div.container-fluid-full.bgGray(style="padding:10px;")
    div.row
      div.col-md-12
        div.col-md-2
          a(ng-click="landing()")
            img.img-responsive.text-center(src="images/innerPageLogo.png",width="160px;")
        div.col-md-4.pull-right.col-md-offset-6.text-right
          .btn.btn-primary-border(ng-click="login()")="Login"
  div.container(style="margin-top:50px;")
  h2.text-center(style="color:#E8277A;margin-top:20px;")="Register"
  hr
  div.container(style="margin-top:50px;margin-bottom:50px;")
    div.col-md-4.col-sm-4.col-sm-offset-3.col-md-offset-3
      div(ng-show="status !== undefined && status.success !== true")
        div.panel-danger.text-center
          p {{status.message}}
      form#signUpForm(role="form",name="form",style="margin-top:20px;",novalidate)
        div(ng-class="{'has-error form-group':form.$submitted && form.name.$error.required || form.name.$error.required === true,'form-group':true}")
          label(for="name")="Name"
          input#name.form-control(type="text",style="font-size:16px;",name="name",placeholder="Name",ng-model="user.name",required="")
        div(ng-class="{'has-error form-group':form.$submitted && form.mobile.$error.required === true,'form-group':true}")
          label(for="mobileNumber")="Mobile Number"
          input#mobileNumber.form-control(type="text",style="font-size:16px;",name="mobile",placeholder="Mobile Number",ng-model="user.mobile",required="")
        div(ng-class="{'has-error form-group':form.$submitted && form.email.$error.required || form.email.$error.email === true,'form-group':true}")
          label(for="email")="Email"
          input#email.form-control(type="text",style="font-size:16px;",name="email",placeholder="Email",ng-model="user.email",required="")
        div(ng-show="form.$submitted &&form.password.$error.minlength")
          | Min length of password must be 8 characters
        div(ng-class="{'has-error form-group':form.$submitted &&form.password.$error.required === true,'form-group':true}")
          label(for="password")="Password"
          input#password.form-control(type="password",style="font-size:16px;",name="password",placeholder="Password",ng-model="user.password",required="",ng-minlength="8")
        div(ng-class="{'has-error form-group':form.$submitted &&form.confirm_password.$error.required === true,'form-group':true}")
          label(for="confirmPassword")="Confirm Password"
          input#confirmPassword.form-control(type="password",style="font-size:16px;",name="confirm_password",placeholder="Confirm Password",ng-model="user.confirm_password",required="",ng-minlength="8")
        div.text-center(style="margin-top:10px;")
          button.btn.btn-primary-border#signUpButton(type="submit",ng-click="register()",data-loading-text="Registering...")="Register"
    div.col-md-3.col-sm-3.text-center(style="margin-top:10px;")
      a#login.text-center(ng-click="loginWithFacebook()")
        image(src="images/fb_login.png",style="width:220px;")
      a#login.text-center(ng-click="loginWithGooglePlus()")
        image(src="images/google_sign_in.png",style="width:195px;")
script(type="text/javascript").
  // Include the UserVoice JavaScript SDK (only needed once on a page)
  UserVoice = window.UserVoice || [];
  (function () {
    var uv = document.createElement('script');
    uv.type = 'text/javascript';
    uv.async = true;
    uv.src = '//widget.uservoice.com/f5oeTjQEmzbG51fJhjObxg.js';
    var s = document.getElementsByTagName('script')[0];
    s.parentNode.insertBefore(uv, s)
  })();
    //
    // UserVoice Javascript SDK developer documentation:
    // https://www.uservoice.com/o/javascript-sdk
    //
    // Set colors
  UserVoice.push(['set', {
    accent_color: '#e8277a',
    trigger_color: 'white',
    trigger_background_color: '#e8277a'
  }]);
      // Identify the user and pass traits
      // To enable, replace sample data with actual user traits and uncomment the line
  UserVoice.push(['identify', {
    //email:      'john.doe@example.com', // User’s email address
    //name:       'John Doe', // User’s real name
    //created_at: 1364406966, // Unix timestamp for the date the user signed up
    //id:         123, // Optional: Unique id of the user (if set, this should not change)
    //type:       'Owner', // Optional: segment your users by type
    //account: {
    //  id:           123, // Optional: associate multiple users with a single account
    //  name:         'Acme, Co.', // Account name
    //  created_at:   1364406966, // Unix timestamp for the date the account was created
    //  monthly_rate: 9.99, // Decimal; monthly rate of the account
    //  ltv:          1495.00, // Decimal; lifetime value of the account
    //  plan:         'Enhanced' // Plan name for the account
    //}
  }]);
      // Add default trigger to the bottom-right corner of the window:
  UserVoice.push(['addTrigger', {mode: 'contact', trigger_position: 'bottom-right'}]);
    // Or, use your own custom trigger:
    //UserVoice.push(['addTrigger', '#id', { mode: 'contact' }]);
    // Autoprompt for Satisfaction and SmartVote (only displayed under certain conditions)
  UserVoice.push(['autoprompt', {}])


